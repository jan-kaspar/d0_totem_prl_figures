import root;
import pad_layout;

import patterns;

include "style.asy";

//----------------------------------------------------------------------------------------------------

guide g_unc_band_mi;
guide g_unc_band_pl;

void AddUncBandPoint(real t, real f_mi, real f_pl, real f_mi_norm, real f_pl_norm)
{
	g_unc_band_mi = g_unc_band_mi--Scale((t, f_mi));
	g_unc_band_pl = g_unc_band_pl--Scale((t, f_pl));
}

//----------------------------------------------------------------------------------------------------

guide g_unc_band_ce;

void AddUncBandCenPoint(real t, real f_mean, real s_down, real s_up, real norm_down, real norm_up, bool d0Bin = false)
{
	real f_mi = f_mean - s_down;
	real f_pl = f_mean + s_up;

	g_unc_band_ce = g_unc_band_ce--Scale((t, f_mean));

	g_unc_band_mi = g_unc_band_mi--Scale((t, f_mi));
	g_unc_band_pl = g_unc_band_pl--Scale((t, f_pl));

	//t += 0.0015;

	if (d0Bin)
	{
		draw(Scale((t, f_mean)), mTU+2.5pt+black);
		draw(Scale((t, f_mean - s_down))--Scale((t, f_mean + s_up)), black);
	} else {
		draw(Scale((t, f_mean)), mTD+2.5pt+red);
		draw(Scale((t, f_mean - s_down))--Scale((t, f_mean + s_up)), red);
	}
}

//----------------------------------------------------------------------------------------------------

guide g_d0;

void AddD0Point(real t, real t_unc, real dsdt, real dsdt_unc, real norm_pl, real norm_mi)
{
	draw(Scale((t, dsdt)), mCi+2pt+blue);

	draw(Scale((t, dsdt - dsdt_unc))--Scale((t, dsdt + dsdt_unc)), blue);
	//draw(Scale((t, dsdt - norm_mi))--Scale((t, dsdt + norm_pl)), blue);

	g_d0 = g_d0--Scale((t, dsdt));
}

//----------------------------------------------------------------------------------------------------

NewPad("$|t|\ung{GeV^2}$", "$\d\si/\d t\ung{mb/GeV^2}$");
scale(Linear, Log);

guide g;

g = g--Scale((0.48, 0.087726566571477));
g = g--Scale((0.49, 0.073663760525031));
g = g--Scale((0.5, 0.061702446053629));
g = g--Scale((0.51, 0.051570908884516));
g = g--Scale((0.52, 0.043026758994996));
g = g--Scale((0.53, 0.035854909370084));
g = g--Scale((0.54, 0.029865490100884));
g = g--Scale((0.55, 0.02489174372793));
g = g--Scale((0.56, 0.020787940006798));
g = g--Scale((0.57, 0.017427341004784));
g = g--Scale((0.58, 0.014700240758032));
g = g--Scale((0.59, 0.012512097722413));
g = g--Scale((0.6, 0.010781772999294));
g = g--Scale((0.61, 0.009439882839083));
g = g--Scale((0.62, 0.008427270224079));
g = g--Scale((0.63, 0.007693597386177));
g = g--Scale((0.64, 0.007196058881878));
g = g--Scale((0.65, 0.006898213265137));
g = g--Scale((0.66, 0.006768930390206));
g = g--Scale((0.67, 0.006781450849895));
g = g--Scale((0.68, 0.006912553906302));
g = g--Scale((0.69, 0.007141830389207));
g = g--Scale((0.7, 0.007451057304945));
g = g--Scale((0.71, 0.007823671197644));
g = g--Scale((0.72, 0.008244337521452));
g = g--Scale((0.73, 0.008698613312899));
g = g--Scale((0.74, 0.009172700209749));
g = g--Scale((0.75, 0.009653284282964));
g = g--Scale((0.76, 0.010127458198596));
g = g--Scale((0.77, 0.01058271990954));
g = g--Scale((0.78, 0.011007040436763));
g = g--Scale((0.79, 0.011388991421355));
g = g--Scale((0.8, 0.011717921138889));
g = g--Scale((0.81, 0.01198416572693));
g = g--Scale((0.82, 0.012179280671324));
g = g--Scale((0.83, 0.012296276324294));
g = g--Scale((0.84, 0.012329840578533));
g = g--Scale((0.85, 0.012276531962033));
g = g--Scale((0.86, 0.012134927468324));
g = g--Scale((0.87, 0.011905711452805));
g = g--Scale((0.88, 0.011591694886336));
g = g--Scale((0.89, 0.011197758055291));
g = g--Scale((0.9, 0.010730714239857));
g = g--Scale((0.91, 0.010199096720077));
g = g--Scale((0.92, 0.009612876324413));
g = g--Scale((0.93, 0.008983121289008));
g = g--Scale((0.94, 0.008321615078918));
g = g--Scale((0.95, 0.007640450712716));
g = g--Scale((0.96, 0.006951621776266));
g = g--Scale((0.97, 0.00626663055609));
g = g--Scale((0.98, 0.005596132531648));
//draw(g, red+1pt);

// uncertainty band centre
// |t|	<f>	s_down	s_up	-norm	+norm
AddUncBandCenPoint(0.48614, 0.081313698066922, 0.007754343034343, 0.007754343034343, 0.006445761128301, 0.006445761128301);
AddUncBandCenPoint(0.5, 0.063130508159951, 0.005654447087081, 0.005654447087081, 0.005004374234368, 0.005004374234368, true);
AddUncBandCenPoint(0.517979, 0.045262302645069, 0.004827851682386, 0.004827851682386, 0.00358795624726, 0.00358795624726);
AddUncBandCenPoint(0.54, 0.029369908316929, 0.003478191287192, 0.003478191287192, 0.002328161402956, 0.002328161402956, true);
AddUncBandCenPoint(0.58, 0.013191164541435, 0.001390703815982, 0.001390703815982, 0.001045667552449, 0.001045667552449, true);
AddUncBandCenPoint(0.596504, 0.009831331025816, 0.001004132062054, 0.001004132062054, 0.000779332546326, 0.000779332546326);
AddUncBandCenPoint(0.64, 0.006278688882313, 0.000954307258215, 0.000954307258215, 0.000497713542692, 0.000497713542692, true);
AddUncBandCenPoint(0.65156, 0.00613360516232, 0.000967861132056, 0.000967861132056, 0.000486212712883, 0.000486212712883);
AddUncBandCenPoint(0.71804, 0.008061691441169, 0.000838240282221, 0.000838240282221, 0.000639052687987, 0.000639052687987);
AddUncBandCenPoint(0.72, 0.008155232260638, 0.000841581025773, 0.000841581025773, 0.00064646769668, 0.00064646769668, true);
AddUncBandCenPoint(0.8, 0.011807142212558, 0.001323888944933, 0.001323888944933, 0.000935955689131, 0.000935955689131, true);
AddUncBandCenPoint(0.859522, 0.012513470849364, 0.001425065749664, 0.001425065749664, 0.0009919465711, 0.0009919465711);
AddUncBandCenPoint(0.88, 0.012064856715177, 0.001306707978092, 0.001306707978092, 0.000956384794714, 0.000956384794714, true);
AddUncBandCenPoint(0.915033, 0.010642654459986, 0.000961179644951, 0.000961179644951, 0.000843646397236, 0.000843646397236);
AddUncBandCenPoint(0.96, 0.007920425713808, 0.000928631257769, 0.000928631257769, 0.000627854511593, 0.000627854511593, true);
AddUncBandCenPoint(0.970003, 0.007295229420419, 0.000990769087844, 0.000990769087844, 0.000578295014715, 0.000578295014715);

//draw(g_unc_band_ce, red+dotted);
draw(g_unc_band_mi, red+dashed);
draw(g_unc_band_pl, red+dashed);

//add("hatch", hatch(5., red));
//filldraw(g_unc_band_pl--reverse(g_unc_band_mi)--cycle, pattern("hatch"), nullpen);
//filldraw(g_unc_band_pl--reverse(g_unc_band_mi)--cycle, red+opacity(0.3), nullpen);

// uncertainty band
/*
//|t|		f_ds/dt -	f_ds/dt +	f-norm	f+norm
AddUncBandPoint(0.48614, 0.073559355032579, 0.089068041101265, 0.074867936938621, 0.087759459195223);
AddUncBandPoint(0.5, 0.05747606107287, 0.068784955247032, 0.058126133925583, 0.068134882394319);
AddUncBandPoint(0.517979, 0.040434450962683, 0.050090154327455, 0.04167434639781, 0.048850258892329);
AddUncBandPoint(0.54, 0.025891717029737, 0.032848099604121, 0.027041746913973, 0.031698069719885);
AddUncBandPoint(0.58, 0.011800460725453, 0.014581868357417, 0.012145496988986, 0.014236832093884);
AddUncBandPoint(0.596504, 0.008827198963762, 0.010835463087871, 0.00905199847949, 0.010610663572142);
AddUncBandPoint(0.64, 0.005324381624098, 0.007232996140527, 0.00578097533962, 0.006776402425005);
AddUncBandPoint(0.65156, 0.005165744030264, 0.007101466294376, 0.005647392449437, 0.006619817875203);
AddUncBandPoint(0.71804, 0.007223451158949, 0.00889993172339, 0.007422638753182, 0.008700744129157);
AddUncBandPoint(0.72, 0.007313651234865, 0.008996813286411, 0.007508764563958, 0.008801699957319);
AddUncBandPoint(0.8, 0.010483253267625, 0.013131031157491, 0.010871186523427, 0.012743097901689);
AddUncBandPoint(0.859522, 0.0110884050997, 0.013938536599029, 0.011521524278264, 0.013505417420465);
AddUncBandPoint(0.88, 0.010758148737085, 0.013371564693268, 0.011108471920462, 0.013021241509891);
AddUncBandPoint(0.915033, 0.009681474815034, 0.011603834104937, 0.009799008062749, 0.011486300857222);
AddUncBandPoint(0.96, 0.00699179445604, 0.008849056971577, 0.007292571202215, 0.008548280225402);
AddUncBandPoint(0.970003, 0.006304460332574, 0.008285998508263, 0.006716934405703, 0.007873524435134);
*/

//|t|	s_t	ds/dt	s_ds/dt		+ norm	- norm
AddD0Point(0.26, 0.02, 4.73, 0.26, 5.41112, 4.04888);
AddD0Point(0.30, 0.02, 2.14, 0.072, 2.44816, 1.83184);
AddD0Point(0.34, 0.02, 1.06, 0.037, 1.21264, 0.90736);
AddD0Point(0.38, 0.02, 0.564, 0.022, 0.645216, 0.482784);
AddD0Point(0.42, 0.02, 0.298, 0.014, 0.340912, 0.255088);
AddD0Point(0.46, 0.02, 0.142, 0.0083, 0.162448, 0.121552);
AddD0Point(0.50, 0.02, 0.0746, 0.0051, 0.0853424, 0.0638576);
AddD0Point(0.54, 0.02, 0.0381, 0.0036, 0.0435864, 0.0326136);
AddD0Point(0.58, 0.02, 0.022, 0.003, 0.025168, 0.018832);
AddD0Point(0.64, 0.04, 0.0104, 0.0013, 0.0118976, 0.0089024);
AddD0Point(0.72, 0.04, 0.0119, 0.0017, 0.0136136, 0.0101864);
AddD0Point(0.80, 0.04, 0.00928, 0.0015, 0.01061632, 0.00794368);
AddD0Point(0.88, 0.04, 0.0112, 0.0017, 0.0128128, 0.0095872);
AddD0Point(0.96, 0.04, 0.00811, 0.0015, 0.00927784, 0.00694216);
AddD0Point(1.04, 0.04, 0.00577, 0.0013, 0.00660088, 0.00493912);
AddD0Point(1.12, 0.04, 0.00573, 0.0013, 0.00655512, 0.00490488);
AddD0Point(1.20, 0.04, 0.00284, 0.0017, 0.00324896, 0.00243104);
//draw(g_d0, blue+dotted);

label(expLabel, (0.98, -1.1), W, Fill(white));

limits((0.46, 4e-3), (1.0, 1e-1), Crop);

AddToLegend("<$\sqrt s = 1.96\un{TeV}$");
AddToLegend("$p\bar p$ by D0", mCi+2pt+blue);
AddToLegend("$pp$ by TOTEM (char.~points)", mTD+2.5pt+red);
AddToLegend("$pp$ by TOTEM (D0 bins)", mTU+2.5pt+black);
AttachLegend(shift(-5, -20) * BuildLegend(NE, lineLength=5mm, vSkip=-1mm, framePen=nullpen), NE);
